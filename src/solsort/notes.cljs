(ns solsort.notes
  (:require-macros [cljs.core.async.macros :refer [go go-loop alt!]])
  (:require
    [solsort.registry :refer [route]]
    [solsort.system :as system :refer [warn log is-browser fs source-file exit is-nodejs set-immediate]]
    [solsort.test :refer [run-tests]]
    [solsort.ws :refer [broadcast]]
    [cljs.core.async :refer [>! <! chan put! take! timeout close! pipe]]))

(defn process-daylog [markdown]
  (let [[_ notes & _] (.split markdown (js/RegExp. "^#[^#]" "m"))
        notes notes]
    (if (= (.slice notes 0 12) "Public Notes")
      (.writeFile fs "misc/autogenerated-notes.md" (.slice notes 12) "utf8"))
      (warn 'notes "error processing daylog")))

(if is-nodejs
  (set-immediate
  #(let [markdown
        (try
          (.readFileSync fs "/home/rasmuserik/notes/daylog.md" "utf8")
          (catch js/Object e nil))]
     (if markdown (process-daylog markdown)))))


(route "notes"
       (fn [note-name]
         (log 'notes "HERE")
         (go
           (clj->js {:type "json-html"
                     :title "Rasmus Erik - solsort.com"
                     :json-css {}
                     :json-html [:h1 note-name]
                     }))))
